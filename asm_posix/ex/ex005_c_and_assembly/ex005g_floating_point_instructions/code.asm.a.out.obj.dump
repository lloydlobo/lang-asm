
a.out:	file format elf64-x86-64

Disassembly of section .text:

00000000010015a0 <_start>:
 10015a0: f3 0f 1e fa                  	endbr64
 10015a4: 31 ed                        	xor	ebp, ebp
 10015a6: 49 89 d1                     	mov	r9, rdx
 10015a9: 5e                           	pop	rsi
 10015aa: 48 89 e2                     	mov	rdx, rsp
 10015ad: 48 83 e4 f0                  	and	rsp, -0x10
 10015b1: 50                           	push	rax
 10015b2: 54                           	push	rsp
 10015b3: 45 31 c0                     	xor	r8d, r8d
 10015b6: 31 c9                        	xor	ecx, ecx
 10015b8: 48 8d 3d 91 00 00 00         	lea	rdi, [rip + 0x91]       # 0x1001650 <main>
 10015bf: ff 15 6b 14 00 00            	call	qword ptr [rip + 0x146b] # 0x1002a30 <printf+0x1002a30>
 10015c5: f4                           	hlt
 10015c6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]

00000000010015d0 <_dl_relocate_static_pie>:
 10015d0: f3 0f 1e fa                  	endbr64
 10015d4: c3                           	ret
 10015d5: cc                           	int3
 10015d6: cc                           	int3
 10015d7: cc                           	int3
 10015d8: cc                           	int3
 10015d9: cc                           	int3
 10015da: cc                           	int3
 10015db: cc                           	int3
 10015dc: cc                           	int3
 10015dd: cc                           	int3
 10015de: cc                           	int3
 10015df: cc                           	int3

00000000010015e0 <sum>:
 10015e0: 66 0f 57 c0                  	xorpd	xmm0, xmm0
 10015e4: 48 83 fe 00                  	cmp	rsi, 0x0
 10015e8: 74 0d                        	je	0x10015f7 <sum.done>

00000000010015ea <sum.loop_next>:
 10015ea: f2 0f 58 07                  	addsd	xmm0, qword ptr [rdi]
 10015ee: 48 83 c7 08                  	add	rdi, 0x8
 10015f2: 48 ff ce                     	dec	rsi
 10015f5: 75 f3                        	jne	0x10015ea <sum.loop_next>

00000000010015f7 <sum.done>:
 10015f7: c3                           	ret

00000000010015f8 <mul>:
 10015f8: b8 01 00 00 00               	mov	eax, 0x1
 10015fd: f2 48 0f 2a c0               	cvtsi2sd	xmm0, rax
 1001602: 48 83 fe 00                  	cmp	rsi, 0x0
 1001606: 74 0d                        	je	0x1001615 <mul.done>

0000000001001608 <mul.loop_next>:
 1001608: f2 0f 59 07                  	mulsd	xmm0, qword ptr [rdi]
 100160c: 48 83 c7 08                  	add	rdi, 0x8
 1001610: 48 ff ce                     	dec	rsi
 1001613: 75 f3                        	jne	0x1001608 <mul.loop_next>

0000000001001615 <mul.done>:
 1001615: c3                           	ret

0000000001001616 <divide>:
 1001616: b8 01 00 00 00               	mov	eax, 0x1
 100161b: f2 48 0f 2a c0               	cvtsi2sd	xmm0, rax
 1001620: 48 83 fe 00                  	cmp	rsi, 0x0
 1001624: 74 1b                        	je	0x1001641 <divide.done>

0000000001001626 <divide.loop_next>:
 1001626: f2 0f 10 0f                  	movsd	xmm1, qword ptr [rdi]   # xmm1 = mem[0],zero
 100162a: 66 0f 57 d2                  	xorpd	xmm2, xmm2
 100162e: 66 0f 2e ca                  	ucomisd	xmm1, xmm2
 1001632: 74 0d                        	je	0x1001641 <divide.done>
 1001634: f2 0f 5e 07                  	divsd	xmm0, qword ptr [rdi]
 1001638: 48 83 c7 08                  	add	rdi, 0x8
 100163c: 48 ff ce                     	dec	rsi
 100163f: 75 e5                        	jne	0x1001626 <divide.loop_next>

0000000001001641 <divide.done>:
 1001641: c3                           	ret
 1001642: cc                           	int3
 1001643: cc                           	int3
 1001644: cc                           	int3
 1001645: cc                           	int3
 1001646: cc                           	int3
 1001647: cc                           	int3
 1001648: cc                           	int3
 1001649: cc                           	int3
 100164a: cc                           	int3
 100164b: cc                           	int3
 100164c: cc                           	int3
 100164d: cc                           	int3
 100164e: cc                           	int3
 100164f: cc                           	int3

0000000001001650 <main>:
 1001650: 55                           	push	rbp
 1001651: 48 89 e5                     	mov	rbp, rsp
 1001654: 48 81 ec 90 00 00 00         	sub	rsp, 0x90
 100165b: 64 48 8b 04 25 28 00 00 00   	mov	rax, qword ptr fs:[0x28]
 1001664: 48 89 45 f8                  	mov	qword ptr [rbp - 0x8], rax
 1001668: c7 45 bc 00 00 00 00         	mov	dword ptr [rbp - 0x44], 0x0
 100166f: 89 7d b8                     	mov	dword ptr [rbp - 0x48], edi
 1001672: 48 89 75 b0                  	mov	qword ptr [rbp - 0x50], rsi
 1001676: c5 f8 57 c0                  	vxorps	xmm0, xmm0, xmm0
 100167a: c5 f9 7f 45 d0               	vmovdqa	xmmword ptr [rbp - 0x30], xmm0
 100167f: c5 f9 7f 45 c0               	vmovdqa	xmmword ptr [rbp - 0x40], xmm0
 1001684: 48 c7 45 e8 00 00 00 00      	mov	qword ptr [rbp - 0x18], 0x0
 100168c: 48 c7 45 e0 00 00 00 00      	mov	qword ptr [rbp - 0x20], 0x0
 1001694: 48 b8 33 33 33 33 33 33 44 40	movabs	rax, 0x4044333333333333
 100169e: 48 89 45 c0                  	mov	qword ptr [rbp - 0x40], rax
 10016a2: 48 b8 33 33 33 33 33 b3 3a 40	movabs	rax, 0x403ab33333333333
 10016ac: 48 89 45 c8                  	mov	qword ptr [rbp - 0x38], rax
 10016b0: 48 b8 66 66 66 66 66 e6 35 40	movabs	rax, 0x4035e66666666666
 10016ba: 48 89 45 d0                  	mov	qword ptr [rbp - 0x30], rax
 10016be: 48 b8 00 00 00 00 00 00 f8 3f	movabs	rax, 0x3ff8000000000000
 10016c8: 48 89 45 d8                  	mov	qword ptr [rbp - 0x28], rax
 10016cc: 48 b8 00 00 00 00 00 40 44 c0	movabs	rax, -0x3fbbc00000000000
 10016d6: 48 89 45 e0                  	mov	qword ptr [rbp - 0x20], rax
 10016da: 48 b8 66 66 66 66 66 66 37 c0	movabs	rax, -0x3fc899999999999a
 10016e4: 48 89 45 e8                  	mov	qword ptr [rbp - 0x18], rax
 10016e8: 48 8d 7d c0                  	lea	rdi, [rbp - 0x40]
 10016ec: 48 89 7d 90                  	mov	qword ptr [rbp - 0x70], rdi
 10016f0: be 06 00 00 00               	mov	esi, 0x6
 10016f5: 48 89 b5 78 ff ff ff         	mov	qword ptr [rbp - 0x88], rsi
 10016fc: e8 df fe ff ff               	call	0x10015e0 <sum>
 1001701: 48 8d 3d fc ed ff ff         	lea	rdi, [rip - 0x1204]     # 0x1000504 <_IO_stdin_used+0x4>
 1001708: 48 89 7d a0                  	mov	qword ptr [rbp - 0x60], rdi
 100170c: b0 01                        	mov	al, 0x1
 100170e: 88 45 af                     	mov	byte ptr [rbp - 0x51], al
 1001711: e8 8a 01 00 00               	call	0x10018a0 <printf@plt>
 1001716: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 100171a: be 02 00 00 00               	mov	esi, 0x2
 100171f: 48 89 75 80                  	mov	qword ptr [rbp - 0x80], rsi
 1001723: e8 b8 fe ff ff               	call	0x10015e0 <sum>
 1001728: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 100172c: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 100172f: e8 6c 01 00 00               	call	0x10018a0 <printf@plt>
 1001734: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 1001738: 31 c0                        	xor	eax, eax
 100173a: 89 c6                        	mov	esi, eax
 100173c: 48 89 75 88                  	mov	qword ptr [rbp - 0x78], rsi
 1001740: e8 9b fe ff ff               	call	0x10015e0 <sum>
 1001745: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 1001749: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 100174c: e8 4f 01 00 00               	call	0x10018a0 <printf@plt>
 1001751: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 1001755: be 03 00 00 00               	mov	esi, 0x3
 100175a: 48 89 75 98                  	mov	qword ptr [rbp - 0x68], rsi
 100175e: e8 7d fe ff ff               	call	0x10015e0 <sum>
 1001763: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 1001767: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 100176a: e8 31 01 00 00               	call	0x10018a0 <printf@plt>
 100176f: 48 8b b5 78 ff ff ff         	mov	rsi, qword ptr [rbp - 0x88]
 1001776: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 100177a: e8 79 fe ff ff               	call	0x10015f8 <mul>
 100177f: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 1001783: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 1001786: e8 15 01 00 00               	call	0x10018a0 <printf@plt>
 100178b: 48 8b 75 80                  	mov	rsi, qword ptr [rbp - 0x80]
 100178f: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 1001793: e8 60 fe ff ff               	call	0x10015f8 <mul>
 1001798: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 100179c: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 100179f: e8 fc 00 00 00               	call	0x10018a0 <printf@plt>
 10017a4: 48 8b 75 88                  	mov	rsi, qword ptr [rbp - 0x78]
 10017a8: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 10017ac: e8 47 fe ff ff               	call	0x10015f8 <mul>
 10017b1: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 10017b5: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 10017b8: e8 e3 00 00 00               	call	0x10018a0 <printf@plt>
 10017bd: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 10017c1: 48 8b 75 98                  	mov	rsi, qword ptr [rbp - 0x68]
 10017c5: e8 2e fe ff ff               	call	0x10015f8 <mul>
 10017ca: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 10017ce: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 10017d1: e8 ca 00 00 00               	call	0x10018a0 <printf@plt>
 10017d6: 48 8b b5 78 ff ff ff         	mov	rsi, qword ptr [rbp - 0x88]
 10017dd: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 10017e1: e8 30 fe ff ff               	call	0x1001616 <divide>
 10017e6: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 10017ea: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 10017ed: e8 ae 00 00 00               	call	0x10018a0 <printf@plt>
 10017f2: 48 8b 75 80                  	mov	rsi, qword ptr [rbp - 0x80]
 10017f6: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 10017fa: e8 17 fe ff ff               	call	0x1001616 <divide>
 10017ff: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 1001803: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 1001806: e8 95 00 00 00               	call	0x10018a0 <printf@plt>
 100180b: 48 8b 75 88                  	mov	rsi, qword ptr [rbp - 0x78]
 100180f: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 1001813: e8 fe fd ff ff               	call	0x1001616 <divide>
 1001818: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 100181c: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 100181f: e8 7c 00 00 00               	call	0x10018a0 <printf@plt>
 1001824: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 1001828: 48 8b 75 98                  	mov	rsi, qword ptr [rbp - 0x68]
 100182c: e8 e5 fd ff ff               	call	0x1001616 <divide>
 1001831: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 1001835: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 1001838: e8 63 00 00 00               	call	0x10018a0 <printf@plt>
 100183d: 64 48 8b 04 25 28 00 00 00   	mov	rax, qword ptr fs:[0x28]
 1001846: 48 8b 4d f8                  	mov	rcx, qword ptr [rbp - 0x8]
 100184a: 48 39 c8                     	cmp	rax, rcx
 100184d: 0f 85 0b 00 00 00            	jne	0x100185e <main+0x20e>
 1001853: 31 c0                        	xor	eax, eax
 1001855: 48 81 c4 90 00 00 00         	add	rsp, 0x90
 100185c: 5d                           	pop	rbp
 100185d: c3                           	ret
 100185e: e8 4d 00 00 00               	call	0x10018b0 <__stack_chk_fail@plt>

Disassembly of section .init:

0000000001001864 <_init>:
 1001864: f3 0f 1e fa                  	endbr64
 1001868: 48 83 ec 08                  	sub	rsp, 0x8
 100186c: 48 8b 05 c5 11 00 00         	mov	rax, qword ptr [rip + 0x11c5] # 0x1002a38 <printf+0x1002a38>
 1001873: 48 85 c0                     	test	rax, rax
 1001876: 74 02                        	je	0x100187a <_init+0x16>
 1001878: ff d0                        	call	rax
 100187a: 48 83 c4 08                  	add	rsp, 0x8
 100187e: c3                           	ret

Disassembly of section .fini:

0000000001001880 <_fini>:
 1001880: f3 0f 1e fa                  	endbr64
 1001884: 48 83 ec 08                  	sub	rsp, 0x8
 1001888: 48 83 c4 08                  	add	rsp, 0x8
 100188c: c3                           	ret

Disassembly of section .plt:

0000000001001890 <.plt>:
 1001890: ff 35 b2 11 00 00            	push	qword ptr [rip + 0x11b2] # 0x1002a48 <_GLOBAL_OFFSET_TABLE_+0x8>
 1001896: ff 25 b4 11 00 00            	jmp	qword ptr [rip + 0x11b4] # 0x1002a50 <_GLOBAL_OFFSET_TABLE_+0x10>
 100189c: 0f 1f 40 00                  	nop	dword ptr [rax]

00000000010018a0 <printf@plt>:
 10018a0: ff 25 b2 11 00 00            	jmp	qword ptr [rip + 0x11b2] # 0x1002a58 <_GLOBAL_OFFSET_TABLE_+0x18>
 10018a6: 68 00 00 00 00               	push	0x0
 10018ab: e9 e0 ff ff ff               	jmp	0x1001890 <.plt>

00000000010018b0 <__stack_chk_fail@plt>:
 10018b0: ff 25 aa 11 00 00            	jmp	qword ptr [rip + 0x11aa] # 0x1002a60 <_GLOBAL_OFFSET_TABLE_+0x20>
 10018b6: 68 01 00 00 00               	push	0x1
 10018bb: e9 d0 ff ff ff               	jmp	0x1001890 <.plt>
