#!/usr/bin/env bash
#
set -e

# Watch: find . -name '*.asm' | entr -crs './build_run'

usage() { # Ported from `github.com/eradman/entr/configure`
	cat <<-HELP
		Usage: build_run [-h]
		Example: assemble code.asm and execute the binary in current directory

		./build_run 
	HELP
	exit 1
}

test_libc_features() { # Ported from `github.com/eradman/entr/configure`
	CFLAGS="-D_GNU_SOURCE"
	: "${CC:=cc}"
	2>/dev/null $CC -xc $CFLAGS -o /dev/null - <<-EOF
		#include <string.h>
		int main(void) {
			char dst[4];
			strlcopy(dst, "1234", sizeof(dst));
			return 0;
		}
	EOF
}

copy_mk() {
	cmd="cp Makefile.$1 Makefile"
	echo "+ $cmd"
	$cmd
}

echo "[info] Starting ./build_run"
while [ $# -gt 0 ]; do
	case "$1" in
	-h)
		usage
		;;
	*)
		echo "build_run: unused argument: $1"
		;;
	esac
	shift #	Remove the first positional parameter
done

case "${TARGET_OS:-$(uname)}" in
Darwin)
	copy_mk macos
	;;
Linux)
	test_libc_features && (copy_mk linux || copy_mk linux-compat)
	;;
*)
	copy_mk bsd
	;;
esac

./build.sh
echo "[info] ./build.sh (exit status: $?)" && echo

./run.sh
echo "[info] ./run.sh (exit status: $?)" && echo

echo "[info] Finished ./build_run"
