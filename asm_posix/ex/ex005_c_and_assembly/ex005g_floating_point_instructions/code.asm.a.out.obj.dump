
a.out:	file format elf64-x86-64

Disassembly of section .text:

00000000010015a0 <_start>:
 10015a0: f3 0f 1e fa                  	endbr64
 10015a4: 31 ed                        	xor	ebp, ebp
 10015a6: 49 89 d1                     	mov	r9, rdx
 10015a9: 5e                           	pop	rsi
 10015aa: 48 89 e2                     	mov	rdx, rsp
 10015ad: 48 83 e4 f0                  	and	rsp, -0x10
 10015b1: 50                           	push	rax
 10015b2: 54                           	push	rsp
 10015b3: 45 31 c0                     	xor	r8d, r8d
 10015b6: 31 c9                        	xor	ecx, ecx
 10015b8: 48 8d 3d a1 00 00 00         	lea	rdi, [rip + 0xa1]       # 0x1001660 <main>
 10015bf: ff 15 7b 14 00 00            	call	qword ptr [rip + 0x147b] # 0x1002a40 <printf+0x1002a40>
 10015c5: f4                           	hlt
 10015c6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]

00000000010015d0 <_dl_relocate_static_pie>:
 10015d0: f3 0f 1e fa                  	endbr64
 10015d4: c3                           	ret
 10015d5: cc                           	int3
 10015d6: cc                           	int3
 10015d7: cc                           	int3
 10015d8: cc                           	int3
 10015d9: cc                           	int3
 10015da: cc                           	int3
 10015db: cc                           	int3
 10015dc: cc                           	int3
 10015dd: cc                           	int3
 10015de: cc                           	int3
 10015df: cc                           	int3

00000000010015e0 <sum>:
 10015e0: 66 0f 57 c0                  	xorpd	xmm0, xmm0
 10015e4: 48 81 fe 00 00 00 00         	cmp	rsi, 0x0
 10015eb: 74 10                        	je	0x10015fd <sum.done>

00000000010015ed <sum.loop_next>:
 10015ed: f2 0f 58 07                  	addsd	xmm0, qword ptr [rdi]
 10015f1: 48 81 c7 08 00 00 00         	add	rdi, 0x8
 10015f8: 48 ff ce                     	dec	rsi
 10015fb: 75 f0                        	jne	0x10015ed <sum.loop_next>

00000000010015fd <sum.done>:
 10015fd: c3                           	ret

00000000010015fe <mul>:
 10015fe: 48 b8 01 00 00 00 00 00 00 00	movabs	rax, 0x1
 1001608: f2 48 0f 2a c0               	cvtsi2sd	xmm0, rax
 100160d: 48 81 fe 00 00 00 00         	cmp	rsi, 0x0
 1001614: 74 10                        	je	0x1001626 <mul.done>

0000000001001616 <mul.loop_next>:
 1001616: f2 0f 59 07                  	mulsd	xmm0, qword ptr [rdi]
 100161a: 48 81 c7 08 00 00 00         	add	rdi, 0x8
 1001621: 48 ff ce                     	dec	rsi
 1001624: 75 f0                        	jne	0x1001616 <mul.loop_next>

0000000001001626 <mul.done>:
 1001626: c3                           	ret

0000000001001627 <divide>:
 1001627: 48 b8 01 00 00 00 00 00 00 00	movabs	rax, 0x1
 1001631: f2 48 0f 2a c0               	cvtsi2sd	xmm0, rax
 1001636: 48 81 fe 00 00 00 00         	cmp	rsi, 0x0
 100163d: 74 1e                        	je	0x100165d <divide.done>

000000000100163f <divide.loop_next>:
 100163f: f2 0f 10 0f                  	movsd	xmm1, qword ptr [rdi]   # xmm1 = mem[0],zero
 1001643: 66 0f 57 d2                  	xorpd	xmm2, xmm2
 1001647: 66 0f 2e ca                  	ucomisd	xmm1, xmm2
 100164b: 74 10                        	je	0x100165d <divide.done>
 100164d: f2 0f 5e 07                  	divsd	xmm0, qword ptr [rdi]
 1001651: 48 81 c7 08 00 00 00         	add	rdi, 0x8
 1001658: 48 ff ce                     	dec	rsi
 100165b: 75 e2                        	jne	0x100163f <divide.loop_next>

000000000100165d <divide.done>:
 100165d: c3                           	ret
 100165e: cc                           	int3
 100165f: cc                           	int3

0000000001001660 <main>:
 1001660: 55                           	push	rbp
 1001661: 48 89 e5                     	mov	rbp, rsp
 1001664: 48 81 ec 90 00 00 00         	sub	rsp, 0x90
 100166b: 64 48 8b 04 25 28 00 00 00   	mov	rax, qword ptr fs:[0x28]
 1001674: 48 89 45 f8                  	mov	qword ptr [rbp - 0x8], rax
 1001678: c7 45 bc 00 00 00 00         	mov	dword ptr [rbp - 0x44], 0x0
 100167f: 89 7d b8                     	mov	dword ptr [rbp - 0x48], edi
 1001682: 48 89 75 b0                  	mov	qword ptr [rbp - 0x50], rsi
 1001686: c5 f8 57 c0                  	vxorps	xmm0, xmm0, xmm0
 100168a: c5 f9 7f 45 d0               	vmovdqa	xmmword ptr [rbp - 0x30], xmm0
 100168f: c5 f9 7f 45 c0               	vmovdqa	xmmword ptr [rbp - 0x40], xmm0
 1001694: 48 c7 45 e8 00 00 00 00      	mov	qword ptr [rbp - 0x18], 0x0
 100169c: 48 c7 45 e0 00 00 00 00      	mov	qword ptr [rbp - 0x20], 0x0
 10016a4: 48 b8 33 33 33 33 33 33 44 40	movabs	rax, 0x4044333333333333
 10016ae: 48 89 45 c0                  	mov	qword ptr [rbp - 0x40], rax
 10016b2: 48 b8 33 33 33 33 33 b3 3a 40	movabs	rax, 0x403ab33333333333
 10016bc: 48 89 45 c8                  	mov	qword ptr [rbp - 0x38], rax
 10016c0: 48 b8 66 66 66 66 66 e6 35 40	movabs	rax, 0x4035e66666666666
 10016ca: 48 89 45 d0                  	mov	qword ptr [rbp - 0x30], rax
 10016ce: 48 b8 00 00 00 00 00 00 f8 3f	movabs	rax, 0x3ff8000000000000
 10016d8: 48 89 45 d8                  	mov	qword ptr [rbp - 0x28], rax
 10016dc: 48 b8 00 00 00 00 00 40 44 c0	movabs	rax, -0x3fbbc00000000000
 10016e6: 48 89 45 e0                  	mov	qword ptr [rbp - 0x20], rax
 10016ea: 48 b8 66 66 66 66 66 66 37 c0	movabs	rax, -0x3fc899999999999a
 10016f4: 48 89 45 e8                  	mov	qword ptr [rbp - 0x18], rax
 10016f8: 48 8d 7d c0                  	lea	rdi, [rbp - 0x40]
 10016fc: 48 89 7d 90                  	mov	qword ptr [rbp - 0x70], rdi
 1001700: be 06 00 00 00               	mov	esi, 0x6
 1001705: 48 89 b5 78 ff ff ff         	mov	qword ptr [rbp - 0x88], rsi
 100170c: e8 cf fe ff ff               	call	0x10015e0 <sum>
 1001711: 48 8d 3d ec ed ff ff         	lea	rdi, [rip - 0x1214]     # 0x1000504 <_IO_stdin_used+0x4>
 1001718: 48 89 7d a0                  	mov	qword ptr [rbp - 0x60], rdi
 100171c: b0 01                        	mov	al, 0x1
 100171e: 88 45 af                     	mov	byte ptr [rbp - 0x51], al
 1001721: e8 8a 01 00 00               	call	0x10018b0 <printf@plt>
 1001726: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 100172a: be 02 00 00 00               	mov	esi, 0x2
 100172f: 48 89 75 80                  	mov	qword ptr [rbp - 0x80], rsi
 1001733: e8 a8 fe ff ff               	call	0x10015e0 <sum>
 1001738: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 100173c: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 100173f: e8 6c 01 00 00               	call	0x10018b0 <printf@plt>
 1001744: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 1001748: 31 c0                        	xor	eax, eax
 100174a: 89 c6                        	mov	esi, eax
 100174c: 48 89 75 88                  	mov	qword ptr [rbp - 0x78], rsi
 1001750: e8 8b fe ff ff               	call	0x10015e0 <sum>
 1001755: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 1001759: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 100175c: e8 4f 01 00 00               	call	0x10018b0 <printf@plt>
 1001761: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 1001765: be 03 00 00 00               	mov	esi, 0x3
 100176a: 48 89 75 98                  	mov	qword ptr [rbp - 0x68], rsi
 100176e: e8 6d fe ff ff               	call	0x10015e0 <sum>
 1001773: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 1001777: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 100177a: e8 31 01 00 00               	call	0x10018b0 <printf@plt>
 100177f: 48 8b b5 78 ff ff ff         	mov	rsi, qword ptr [rbp - 0x88]
 1001786: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 100178a: e8 6f fe ff ff               	call	0x10015fe <mul>
 100178f: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 1001793: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 1001796: e8 15 01 00 00               	call	0x10018b0 <printf@plt>
 100179b: 48 8b 75 80                  	mov	rsi, qword ptr [rbp - 0x80]
 100179f: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 10017a3: e8 56 fe ff ff               	call	0x10015fe <mul>
 10017a8: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 10017ac: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 10017af: e8 fc 00 00 00               	call	0x10018b0 <printf@plt>
 10017b4: 48 8b 75 88                  	mov	rsi, qword ptr [rbp - 0x78]
 10017b8: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 10017bc: e8 3d fe ff ff               	call	0x10015fe <mul>
 10017c1: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 10017c5: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 10017c8: e8 e3 00 00 00               	call	0x10018b0 <printf@plt>
 10017cd: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 10017d1: 48 8b 75 98                  	mov	rsi, qword ptr [rbp - 0x68]
 10017d5: e8 24 fe ff ff               	call	0x10015fe <mul>
 10017da: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 10017de: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 10017e1: e8 ca 00 00 00               	call	0x10018b0 <printf@plt>
 10017e6: 48 8b b5 78 ff ff ff         	mov	rsi, qword ptr [rbp - 0x88]
 10017ed: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 10017f1: e8 31 fe ff ff               	call	0x1001627 <divide>
 10017f6: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 10017fa: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 10017fd: e8 ae 00 00 00               	call	0x10018b0 <printf@plt>
 1001802: 48 8b 75 80                  	mov	rsi, qword ptr [rbp - 0x80]
 1001806: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 100180a: e8 18 fe ff ff               	call	0x1001627 <divide>
 100180f: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 1001813: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 1001816: e8 95 00 00 00               	call	0x10018b0 <printf@plt>
 100181b: 48 8b 75 88                  	mov	rsi, qword ptr [rbp - 0x78]
 100181f: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 1001823: e8 ff fd ff ff               	call	0x1001627 <divide>
 1001828: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 100182c: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 100182f: e8 7c 00 00 00               	call	0x10018b0 <printf@plt>
 1001834: 48 8b 7d 90                  	mov	rdi, qword ptr [rbp - 0x70]
 1001838: 48 8b 75 98                  	mov	rsi, qword ptr [rbp - 0x68]
 100183c: e8 e6 fd ff ff               	call	0x1001627 <divide>
 1001841: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 1001845: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 1001848: e8 63 00 00 00               	call	0x10018b0 <printf@plt>
 100184d: 64 48 8b 04 25 28 00 00 00   	mov	rax, qword ptr fs:[0x28]
 1001856: 48 8b 4d f8                  	mov	rcx, qword ptr [rbp - 0x8]
 100185a: 48 39 c8                     	cmp	rax, rcx
 100185d: 0f 85 0b 00 00 00            	jne	0x100186e <main+0x20e>
 1001863: 31 c0                        	xor	eax, eax
 1001865: 48 81 c4 90 00 00 00         	add	rsp, 0x90
 100186c: 5d                           	pop	rbp
 100186d: c3                           	ret
 100186e: e8 4d 00 00 00               	call	0x10018c0 <__stack_chk_fail@plt>

Disassembly of section .init:

0000000001001874 <_init>:
 1001874: f3 0f 1e fa                  	endbr64
 1001878: 48 83 ec 08                  	sub	rsp, 0x8
 100187c: 48 8b 05 c5 11 00 00         	mov	rax, qword ptr [rip + 0x11c5] # 0x1002a48 <printf+0x1002a48>
 1001883: 48 85 c0                     	test	rax, rax
 1001886: 74 02                        	je	0x100188a <_init+0x16>
 1001888: ff d0                        	call	rax
 100188a: 48 83 c4 08                  	add	rsp, 0x8
 100188e: c3                           	ret

Disassembly of section .fini:

0000000001001890 <_fini>:
 1001890: f3 0f 1e fa                  	endbr64
 1001894: 48 83 ec 08                  	sub	rsp, 0x8
 1001898: 48 83 c4 08                  	add	rsp, 0x8
 100189c: c3                           	ret

Disassembly of section .plt:

00000000010018a0 <.plt>:
 10018a0: ff 35 b2 11 00 00            	push	qword ptr [rip + 0x11b2] # 0x1002a58 <_GLOBAL_OFFSET_TABLE_+0x8>
 10018a6: ff 25 b4 11 00 00            	jmp	qword ptr [rip + 0x11b4] # 0x1002a60 <_GLOBAL_OFFSET_TABLE_+0x10>
 10018ac: 0f 1f 40 00                  	nop	dword ptr [rax]

00000000010018b0 <printf@plt>:
 10018b0: ff 25 b2 11 00 00            	jmp	qword ptr [rip + 0x11b2] # 0x1002a68 <_GLOBAL_OFFSET_TABLE_+0x18>
 10018b6: 68 00 00 00 00               	push	0x0
 10018bb: e9 e0 ff ff ff               	jmp	0x10018a0 <.plt>

00000000010018c0 <__stack_chk_fail@plt>:
 10018c0: ff 25 aa 11 00 00            	jmp	qword ptr [rip + 0x11aa] # 0x1002a70 <_GLOBAL_OFFSET_TABLE_+0x20>
 10018c6: 68 01 00 00 00               	push	0x1
 10018cb: e9 d0 ff ff ff               	jmp	0x10018a0 <.plt>
