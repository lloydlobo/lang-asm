
a.out:	file format elf64-x86-64

Disassembly of section .text:

00000000010015a0 <_start>:
 10015a0: f3 0f 1e fa                  	endbr64
 10015a4: 31 ed                        	xor	ebp, ebp
 10015a6: 49 89 d1                     	mov	r9, rdx
 10015a9: 5e                           	pop	rsi
 10015aa: 48 89 e2                     	mov	rdx, rsp
 10015ad: 48 83 e4 f0                  	and	rsp, -0x10
 10015b1: 50                           	push	rax
 10015b2: 54                           	push	rsp
 10015b3: 45 31 c0                     	xor	r8d, r8d
 10015b6: 31 c9                        	xor	ecx, ecx
 10015b8: 48 8d 3d 41 00 00 00         	lea	rdi, [rip + 0x41]       # 0x1001600 <main>
 10015bf: ff 15 3b 13 00 00            	call	qword ptr [rip + 0x133b] # 0x1002900 <printf+0x1002900>
 10015c5: f4                           	hlt
 10015c6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]

00000000010015d0 <_dl_relocate_static_pie>:
 10015d0: f3 0f 1e fa                  	endbr64
 10015d4: c3                           	ret
 10015d5: cc                           	int3
 10015d6: cc                           	int3
 10015d7: cc                           	int3
 10015d8: cc                           	int3
 10015d9: cc                           	int3
 10015da: cc                           	int3
 10015db: cc                           	int3
 10015dc: cc                           	int3
 10015dd: cc                           	int3
 10015de: cc                           	int3
 10015df: cc                           	int3

00000000010015e0 <sum>:
 10015e0: 66 0f 57 c0                  	xorpd	xmm0, xmm0
 10015e4: 48 81 fe 00 00 00 00         	cmp	rsi, 0x0
 10015eb: 74 10                        	je	0x10015fd <sum.done>

00000000010015ed <sum.loop_next>:
 10015ed: f2 0f 58 07                  	addsd	xmm0, qword ptr [rdi]
 10015f1: 48 81 c7 08 00 00 00         	add	rdi, 0x8
 10015f8: 48 ff ce                     	dec	rsi
 10015fb: 75 f0                        	jne	0x10015ed <sum.loop_next>

00000000010015fd <sum.done>:
 10015fd: c3                           	ret
 10015fe: cc                           	int3
 10015ff: cc                           	int3

0000000001001600 <main>:
 1001600: 55                           	push	rbp
 1001601: 48 89 e5                     	mov	rbp, rsp
 1001604: 48 83 ec 70                  	sub	rsp, 0x70
 1001608: 64 48 8b 04 25 28 00 00 00   	mov	rax, qword ptr fs:[0x28]
 1001611: 48 89 45 f8                  	mov	qword ptr [rbp - 0x8], rax
 1001615: c7 45 bc 00 00 00 00         	mov	dword ptr [rbp - 0x44], 0x0
 100161c: 89 7d b8                     	mov	dword ptr [rbp - 0x48], edi
 100161f: 48 89 75 b0                  	mov	qword ptr [rbp - 0x50], rsi
 1001623: c5 f8 57 c0                  	vxorps	xmm0, xmm0, xmm0
 1001627: c5 f9 7f 45 d0               	vmovdqa	xmmword ptr [rbp - 0x30], xmm0
 100162c: c5 f9 7f 45 c0               	vmovdqa	xmmword ptr [rbp - 0x40], xmm0
 1001631: 48 c7 45 e8 00 00 00 00      	mov	qword ptr [rbp - 0x18], 0x0
 1001639: 48 c7 45 e0 00 00 00 00      	mov	qword ptr [rbp - 0x20], 0x0
 1001641: 48 b8 33 33 33 33 33 33 44 40	movabs	rax, 0x4044333333333333
 100164b: 48 89 45 c0                  	mov	qword ptr [rbp - 0x40], rax
 100164f: 48 b8 33 33 33 33 33 b3 3a 40	movabs	rax, 0x403ab33333333333
 1001659: 48 89 45 c8                  	mov	qword ptr [rbp - 0x38], rax
 100165d: 48 b8 66 66 66 66 66 e6 35 40	movabs	rax, 0x4035e66666666666
 1001667: 48 89 45 d0                  	mov	qword ptr [rbp - 0x30], rax
 100166b: 48 b8 00 00 00 00 00 00 f8 3f	movabs	rax, 0x3ff8000000000000
 1001675: 48 89 45 d8                  	mov	qword ptr [rbp - 0x28], rax
 1001679: 48 b8 00 00 00 00 00 40 44 c0	movabs	rax, -0x3fbbc00000000000
 1001683: 48 89 45 e0                  	mov	qword ptr [rbp - 0x20], rax
 1001687: 48 b8 66 66 66 66 66 66 37 c0	movabs	rax, -0x3fc899999999999a
 1001691: 48 89 45 e8                  	mov	qword ptr [rbp - 0x18], rax
 1001695: 48 8d 7d c0                  	lea	rdi, [rbp - 0x40]
 1001699: 48 89 7d 98                  	mov	qword ptr [rbp - 0x68], rdi
 100169d: be 06 00 00 00               	mov	esi, 0x6
 10016a2: e8 39 ff ff ff               	call	0x10015e0 <sum>
 10016a7: 48 8d 3d 56 ee ff ff         	lea	rdi, [rip - 0x11aa]     # 0x1000504 <_IO_stdin_used+0x4>
 10016ae: 48 89 7d a0                  	mov	qword ptr [rbp - 0x60], rdi
 10016b2: b0 01                        	mov	al, 0x1
 10016b4: 88 45 af                     	mov	byte ptr [rbp - 0x51], al
 10016b7: e8 b4 00 00 00               	call	0x1001770 <printf@plt>
 10016bc: 48 8b 7d 98                  	mov	rdi, qword ptr [rbp - 0x68]
 10016c0: be 02 00 00 00               	mov	esi, 0x2
 10016c5: e8 16 ff ff ff               	call	0x10015e0 <sum>
 10016ca: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 10016ce: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 10016d1: e8 9a 00 00 00               	call	0x1001770 <printf@plt>
 10016d6: 48 8b 7d 98                  	mov	rdi, qword ptr [rbp - 0x68]
 10016da: 31 c0                        	xor	eax, eax
 10016dc: 89 c6                        	mov	esi, eax
 10016de: e8 fd fe ff ff               	call	0x10015e0 <sum>
 10016e3: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 10016e7: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 10016ea: e8 81 00 00 00               	call	0x1001770 <printf@plt>
 10016ef: 48 8b 7d 98                  	mov	rdi, qword ptr [rbp - 0x68]
 10016f3: be 03 00 00 00               	mov	esi, 0x3
 10016f8: e8 e3 fe ff ff               	call	0x10015e0 <sum>
 10016fd: 48 8b 7d a0                  	mov	rdi, qword ptr [rbp - 0x60]
 1001701: 8a 45 af                     	mov	al, byte ptr [rbp - 0x51]
 1001704: e8 67 00 00 00               	call	0x1001770 <printf@plt>
 1001709: 64 48 8b 04 25 28 00 00 00   	mov	rax, qword ptr fs:[0x28]
 1001712: 48 8b 4d f8                  	mov	rcx, qword ptr [rbp - 0x8]
 1001716: 48 39 c8                     	cmp	rax, rcx
 1001719: 0f 85 08 00 00 00            	jne	0x1001727 <main+0x127>
 100171f: 31 c0                        	xor	eax, eax
 1001721: 48 83 c4 70                  	add	rsp, 0x70
 1001725: 5d                           	pop	rbp
 1001726: c3                           	ret
 1001727: e8 54 00 00 00               	call	0x1001780 <__stack_chk_fail@plt>

Disassembly of section .init:

000000000100172c <_init>:
 100172c: f3 0f 1e fa                  	endbr64
 1001730: 48 83 ec 08                  	sub	rsp, 0x8
 1001734: 48 8b 05 cd 11 00 00         	mov	rax, qword ptr [rip + 0x11cd] # 0x1002908 <printf+0x1002908>
 100173b: 48 85 c0                     	test	rax, rax
 100173e: 74 02                        	je	0x1001742 <_init+0x16>
 1001740: ff d0                        	call	rax
 1001742: 48 83 c4 08                  	add	rsp, 0x8
 1001746: c3                           	ret

Disassembly of section .fini:

0000000001001748 <_fini>:
 1001748: f3 0f 1e fa                  	endbr64
 100174c: 48 83 ec 08                  	sub	rsp, 0x8
 1001750: 48 83 c4 08                  	add	rsp, 0x8
 1001754: c3                           	ret

Disassembly of section .plt:

0000000001001760 <.plt>:
 1001760: ff 35 b2 11 00 00            	push	qword ptr [rip + 0x11b2] # 0x1002918 <_GLOBAL_OFFSET_TABLE_+0x8>
 1001766: ff 25 b4 11 00 00            	jmp	qword ptr [rip + 0x11b4] # 0x1002920 <_GLOBAL_OFFSET_TABLE_+0x10>
 100176c: 0f 1f 40 00                  	nop	dword ptr [rax]

0000000001001770 <printf@plt>:
 1001770: ff 25 b2 11 00 00            	jmp	qword ptr [rip + 0x11b2] # 0x1002928 <_GLOBAL_OFFSET_TABLE_+0x18>
 1001776: 68 00 00 00 00               	push	0x0
 100177b: e9 e0 ff ff ff               	jmp	0x1001760 <.plt>

0000000001001780 <__stack_chk_fail@plt>:
 1001780: ff 25 aa 11 00 00            	jmp	qword ptr [rip + 0x11aa] # 0x1002930 <_GLOBAL_OFFSET_TABLE_+0x20>
 1001786: 68 01 00 00 00               	push	0x1
 100178b: e9 d0 ff ff ff               	jmp	0x1001760 <.plt>
