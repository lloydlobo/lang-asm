
a.out:	file format elf64-x86-64

Disassembly of section .text:

0000000001001550 <_start>:
 1001550: f3 0f 1e fa                  	endbr64
 1001554: 31 ed                        	xor	ebp, ebp
 1001556: 49 89 d1                     	mov	r9, rdx
 1001559: 5e                           	pop	rsi
 100155a: 48 89 e2                     	mov	rdx, rsp
 100155d: 48 83 e4 f0                  	and	rsp, -0x10
 1001561: 50                           	push	rax
 1001562: 54                           	push	rsp
 1001563: 45 31 c0                     	xor	r8d, r8d
 1001566: 31 c9                        	xor	ecx, ecx
 1001568: 48 8d 3d 21 00 00 00         	lea	rdi, [rip + 0x21]       # 0x1001590 <main>
 100156f: ff 15 3b 12 00 00            	call	qword ptr [rip + 0x123b] # 0x10027b0 <puts+0x10027b0>
 1001575: f4                           	hlt
 1001576: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]

0000000001001580 <_dl_relocate_static_pie>:
 1001580: f3 0f 1e fa                  	endbr64
 1001584: c3                           	ret
 1001585: cc                           	int3
 1001586: cc                           	int3
 1001587: cc                           	int3
 1001588: cc                           	int3
 1001589: cc                           	int3
 100158a: cc                           	int3
 100158b: cc                           	int3
 100158c: cc                           	int3
 100158d: cc                           	int3
 100158e: cc                           	int3
 100158f: cc                           	int3

0000000001001590 <main>:
 1001590: 53                           	push	rbx
 1001591: 48 bf ec 37 00 01 00 00 00 00	movabs	rdi, 0x10037ec
 100159b: e8 90 00 00 00               	call	0x1001630 <puts@plt>
 10015a0: b9 2a 00 00 00               	mov	ecx, 0x2a
 10015a5: 48 31 c0                     	xor	rax, rax
 10015a8: 48 31 db                     	xor	rbx, rbx
 10015ab: 48 ff c3                     	inc	rbx

00000000010015ae <print.save>:
 10015ae: 50                           	push	rax
 10015af: 51                           	push	rcx

00000000010015b0 <print.load>:
 10015b0: 48 bf 0e 38 00 01 00 00 00 00	movabs	rdi, 0x100380e
 10015ba: 48 89 c6                     	mov	rsi, rax
 10015bd: 48 31 c0                     	xor	rax, rax
 10015c0: e8 5b 00 00 00               	call	0x1001620 <printf@plt>

00000000010015c5 <print.restore>:
 10015c5: 59                           	pop	rcx
 10015c6: 58                           	pop	rax

00000000010015c7 <print.next>:
 10015c7: 48 89 c2                     	mov	rdx, rax
 10015ca: 48 89 d8                     	mov	rax, rbx
 10015cd: 48 01 d3                     	add	rbx, rdx
 10015d0: ff c9                        	dec	ecx
 10015d2: 75 da                        	jne	0x10015ae <print.save>

00000000010015d4 <leave>:
 10015d4: 5b                           	pop	rbx
 10015d5: b8 00 00 00 00               	mov	eax, 0x0
 10015da: c3                           	ret

Disassembly of section .init:

00000000010015dc <_init>:
 10015dc: f3 0f 1e fa                  	endbr64
 10015e0: 48 83 ec 08                  	sub	rsp, 0x8
 10015e4: 48 8b 05 cd 11 00 00         	mov	rax, qword ptr [rip + 0x11cd] # 0x10027b8 <puts+0x10027b8>
 10015eb: 48 85 c0                     	test	rax, rax
 10015ee: 74 02                        	je	0x10015f2 <_init+0x16>
 10015f0: ff d0                        	call	rax
 10015f2: 48 83 c4 08                  	add	rsp, 0x8
 10015f6: c3                           	ret

Disassembly of section .fini:

00000000010015f8 <_fini>:
 10015f8: f3 0f 1e fa                  	endbr64
 10015fc: 48 83 ec 08                  	sub	rsp, 0x8
 1001600: 48 83 c4 08                  	add	rsp, 0x8
 1001604: c3                           	ret

Disassembly of section .plt:

0000000001001610 <.plt>:
 1001610: ff 35 b2 11 00 00            	push	qword ptr [rip + 0x11b2] # 0x10027c8 <_GLOBAL_OFFSET_TABLE_+0x8>
 1001616: ff 25 b4 11 00 00            	jmp	qword ptr [rip + 0x11b4] # 0x10027d0 <_GLOBAL_OFFSET_TABLE_+0x10>
 100161c: 0f 1f 40 00                  	nop	dword ptr [rax]

0000000001001620 <printf@plt>:
 1001620: ff 25 b2 11 00 00            	jmp	qword ptr [rip + 0x11b2] # 0x10027d8 <_GLOBAL_OFFSET_TABLE_+0x18>
 1001626: 68 00 00 00 00               	push	0x0
 100162b: e9 e0 ff ff ff               	jmp	0x1001610 <.plt>

0000000001001630 <puts@plt>:
 1001630: ff 25 aa 11 00 00            	jmp	qword ptr [rip + 0x11aa] # 0x10027e0 <_GLOBAL_OFFSET_TABLE_+0x20>
 1001636: 68 01 00 00 00               	push	0x1
 100163b: e9 d0 ff ff ff               	jmp	0x1001610 <.plt>
